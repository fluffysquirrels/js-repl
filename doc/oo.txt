** Todo

* Records
New functions for records
	register-type
	record=
	eq updates

Add more types
	primitives - type object and get-type-name impl
		null
		number
		symbol
		list
		boolean
		string
		func
		macro
	play types with only primitive fields (e.g. point, vector)
	play types with record fields

Verify field names and types when filling records
Remove types from record field values.

--------

Redefine func to permit type annotations and check them at run-time.

New functions for methods
	.	-- (. my-method my-obj arg1 arg2 arg3)


Ideas
	modules
		functions are defined in modules (like namespaces)
		a class definition is itself a module
		modules have certain access to members of other modules: generalises internal, public, friend, etc.
			defined by some overloaded function (can-call member calling-scope)
		this should be compatible with multi-methods
		still have a single place where "the class itself" is defined: discoverability, can reason about invariants
