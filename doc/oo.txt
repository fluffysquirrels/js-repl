** Todo
* Records
New functions for records
	add-type
	record=

Add more types
	play types with only primitive fields (e.g. point, vector)
	play types with record fields

Function / macro bodies available as fields on records.
Verify field names and types when filling records
Remove types from record field values.

--------
* Methods
Define methods to permit type annotations and check them at run-time.
Inheritance and polymorphism. How the fuck?

---

* Ideas on modules
		functions are defined in modules (like namespaces)
		a class definition is itself a module
		modules have certain access to members of other modules: generalises internal, public, friend, etc.
			defined by some overloaded function (can-call member calling-scope)
		this should be compatible with multi-methods
		still have a single place where "the class itself" is defined: discoverability, can reason about invariants
