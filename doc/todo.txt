In progress

Next
 - type-safe records
   - verify field names and type on record set
 - records
   - record=

oo.txt

Unit tests
 - cond -- (setl x 5)(cond ((not(num? x)) 'notanum) ((< x 0) -1) ((> x 0) +1) (true 0))
 - record=
 - eq on records
 - record functions
   - get-type-name
     - incl on primitives and records
   - is-a
   - type-of
   - type-exists
   - get-type

Lisp lib
 - data types
   - dict type -- for / from oo
 - fold
 - variadic and, or.
 - let
 - pp

JS lib
 - Use JS prototypes to trim objects
 - data types
   - Arrays
   - Hashes
   - Strings
 - split tests into separate files

Lang
 - quasiquoting
 - better parser and tokeniser
 - comments
 - strings

Perf
 - Profile everything
 - Unit tests take 20 secs wtf?
 - Kill debug messages in hot loops

Future ideas
 - load external files
 - deconstructing value bind
 - debugging -- eval once
 - pure functions
   - bind to values, not scopes?
 - pre-evaluate macros for a function definition
 - static typing
 - compile to JS
 - exception handling / conditions
 - tail call elimination
 - ffi to JavaScript
 - macro-expand -- no eval!

Code puzzles
 - primality tests.
 - Fibonacci with memoization.
 - balanced tree data structures.
 - parser.
 - regex.
